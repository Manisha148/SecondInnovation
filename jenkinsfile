pipeline {
    
    stages {
        stage('Build and Push Image') {
            steps {
                sh 'docker build -t my-image:latest .'
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                    sh 'docker tag my-image:latest 269001393029.dkr.ecr.us-east-1.amazonaws.com/my-image:latest'
                    sh 'docker push 269001393029.dkr.ecr.us-east-1.amazonaws.com/my-image:latest'
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: 'KUBECONFIG_FILE', serverUrl: 'https://<KUBERNETES_MASTER_IP>:<KUBERNETES_MASTER_PORT>']) {
                    sh 'kubectl apply -f deployment.yaml'
                }
            }
        }
    }
}
