pipeline {
    agent any
    
    stages {
        stage('Build and Push Image to ECR') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 269001393029.dkr.ecr.us-east-1.amazonaws.com'
                    sh 'docker build -t pythonflask:latest .'
                    sh 'docker tag pythonflask:latest 269001393029.dkr.ecr.us-east-1.amazonaws.com/pythonflask:latest'
                    sh 'docker push 269001393029.dkr.ecr.us-east-1.amazonaws.com/pythonflask:latest'
                }
            }
        }
        
        stage('Deploy to EKS') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh 'kubectl apply -f <deployment_file> --kubeconfig=<kubeconfig_file>'
                }
            }
        }
    }
}
